@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar WrapContent="false" Dense="false" Elevation="0">
        <MudNavLink Href="" Match="NavLinkMatch.All" IconColor="Color.Surface" Icon="@Icons.Material.Filled.Home">
            <MudText Class="d-none d-sm-block" Typo="Typo.body1">
                Home
            </MudText>
        </MudNavLink>
        <MudNavLink Href="EditReview" Match="NavLinkMatch.Prefix" IconColor="Color.Surface" Icon="@Icons.Material.Filled.Add">
            <MudText Class="d-none d-sm-block" Typo="Typo.body1">
                Add Review
            </MudText>
        </MudNavLink>
        <MudNavLink Href="fetchdata" Match="NavLinkMatch.Prefix" IconColor="Color.Surface" Icon="@Icons.Material.Filled.List">
            <MudText Class="d-none d-sm-block" Typo="Typo.body1">
                Fetch data
            </MudText>
        </MudNavLink>

        <MudSpacer />

        <LoginDisplay />
        <CultureSelector />
        <MudSwitch Checked="@_isDarkMode" CheckedChanged="HandleThemeChanged" Color="Color.Primary" Class="ml-4 d-none d-sm-block" T="bool" ThumbIcon="@Icons.Material.Filled.DarkMode" />
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            <ErrorBoundary>
                @Body
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();
    private bool _isDarkMode = true;

    public async Task HandleThemeChanged(bool value)
    {
        if (_isDarkMode == value) return;
        //_isDarkMode=value;
        await localStorage.SetItemAsync("darkTheme", value);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var darkThemeCookieValue = await localStorage.GetItemAsync<bool>("darkTheme");
        _isDarkMode = darkThemeCookieValue;
        StateHasChanged();
    }
}
<style>
    .mud-select {
        flex-grow: 0;
    }

    .mud-nav-item {
        width: auto;
    }
</style>