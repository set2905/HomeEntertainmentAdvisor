@page "/{SearchMediaPieces}"
@page "/"
@using HomeEntertainmentAdvisor.Models;
@using HomeEntertainmentAdvisor.Pages.Shared
@using HomeEntertainmentAdvisor.Services.Interfaces;
@inject IReviewService reviewService

<PageTitle>Review</PageTitle>
<MudGrid Justify="Justify.Center">
    <MudItem xs="12" md="10">
        <MudList>
            @foreach (Review rev in reviews)
            {
                string href = $"Review/{rev.Id.ToString()}";
                <MudListItem Href="@href">
                    <ReviewItem Review="@rev" />
                </MudListItem>
            }
        </MudList>
    </MudItem>
</MudGrid>

@code
{
    [Parameter]
    public string? Search { get; set; }
    private int perPage = 10;

    private int currentPage;
    private List<Review> reviews = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Search!=null)
            reviews = await reviewService.Search(Search, currentPage, perPage);
        else
        {
            reviews = await reviewService.GetNewest();
        }

    }

}