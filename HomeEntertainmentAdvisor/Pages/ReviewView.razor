@page "/Review/{ReviewId}"
@using HomeEntertainmentAdvisor.Models;
@using HomeEntertainmentAdvisor.Pages.Shared
@using HomeEntertainmentAdvisor.Services.Interfaces;
@using Markdig.Syntax.Inlines;
@inject IReviewService reviewService
@inject IMediaService mediaService
@inject IRatingService ratingService
@inject IImageService imageService;

@inject ISnackbar snackBar

<PageTitle>Review</PageTitle>
<MudText>
    @review.Name
</MudText>
<MudMarkdown Value="@review.Content"
             Styling="Styling"
             TableCellMinWidth="100"
             CodeBlockTheme="CodeBlockTheme.DraculaBase16" />
<ReviewImageCarousel Images="@images" />

<LikeButton @ref=@likeButton Review="@review" />
<CommentSection Review="@review" />
@code
{
    [Parameter]
    public string? ReviewId { get; set; }
    private Review review = new();
    private LikeButton likeButton = new();

    private MudMarkdownStyling Styling { get; } = new();

    private List<ReviewImage> images = new();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
            await SetReview();
    }

    private async Task SetReview()
    {
        if (ReviewId!=null)
        {
            Guid reviewGuid;
            if (Guid.TryParse(ReviewId, out reviewGuid))
            {
                Review? found = await reviewService.GetById(reviewGuid);
                if (found == null)
                {
                    snackBar.Add("Review not found!", Severity.Error);
                    return;
                }
                review = found;
                images = await imageService.GetImagesForReview(reviewGuid);
                StateHasChanged();
            }
        }
    }

}