@using HomeEntertainmentAdvisor.Models;
@using HomeEntertainmentAdvisor.Services.Interfaces;
@inject IReviewLikeService likeService;
<MudContainer>
    <MudStack Row=true Class="d-flex justify-end">
        <MudText Typo="@Typo">
            @if (user!=null)
                @user.UserName

            </MudText>
            <MudText Typo="@Typo">
                <MudIcon Icon="fab fa-gratipay" Size="Size.Small" />  @likeCount
            </MudText>
        </MudStack>
</MudContainer>
    @code {
    [Parameter]
    public string UserId { get; set; } = string.Empty;
    [Parameter]
    public Typo Typo { get; set; } = Typo.overline;
    private User? user;
    private int likeCount;
    private bool visible = true;
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (UserId.Length>0&& UserId!=Guid.Empty.ToString())
            user = await likeService.TryUpdateUserLikes(UserId);
        if (user != null)
            likeCount = user.CachedLikes;

        visible = user != null;
    }
}
